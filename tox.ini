[tox]
envlist = py310,docs,jsdoc,screenshots,acceptance310,docker,migrations

[testenv]
deps =
  -r{toxinidir}/requirements.txt
  cov-core==1.15.0
  coverage==5.0.3
  execnet==1.7.1
  py==1.8.1
  pycodestyle
  pytest==5.3.4
  pytest-cache==1.0
  pytest-cov==2.8.1
  pytest-pycodestyle
  pytest-flakes==4.0.0
  pytest-html==2.0.1
  ansi2html==1.5.2
  mock==3.0.5
  freezegun==0.3.14
  pytest-blockage==0.2.2
  pytest-timeout==1.3.4
  alembic-verify==0.1.4
  retrying==1.3.3

passenv=CI TRAVIS* CONTINUOUS_INTEGRATION AWS* NO_REFRESH_DB DB_CONNSTRING NO_CLASS_REFRESH_DB
setenv =
    TOXINIDIR={toxinidir}
    TOXDISTDIR={distdir}
    SETTINGS_MODULE=biweeklybudget.tests.fixtures.test_settings
    CI=true
sitepackages = False
whitelist_externals = env test

commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    py.test -rxs -vv --durations=10 --pycodestyle --flakes --blockage -m "not integration and not acceptance and not migrations" --cov-report term-missing --cov-report xml --cov-report html --cov-config {toxinidir}/.coveragerc --cov=biweeklybudget --html=results/report.html {posargs} biweeklybudget

# always recreate the venv
recreate = True

[testenv:docs]
passenv=CI TRAVIS* CONTINUOUS_INTEGRATION
setenv =
    TOXINIDIR={toxinidir}
    TOXDISTDIR={distdir}
    CI=true
deps =
  -r{toxinidir}/requirements.txt
  docutils==0.16
  pygments==2.6.1
  sphinx==1.5.5
  sphinx_rtd_theme==0.5.0
basepython = python3.10
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    rst2html.py --halt=2 README.rst /dev/null
    sphinx-apidoc biweeklybudget biweeklybudget/tests biweeklybudget/alembic biweeklybudget/vendored -o {toxinidir}/docs/source -e -f -M
    # link check
    # -n runs in nit-picky mode
    # -W turns warnings into errors
    sphinx-build -a -n -W -b linkcheck {toxinidir}/docs/source {toxinidir}/docs/build/html
    # build
    sphinx-build -a -n -W -b html {toxinidir}/docs/source {toxinidir}/docs/build/html

[testenv:jsdoc]
# generate sphinx-js javascript documentation
passenv = {[testenv:docs]passenv}
setenv = {[testenv:docs]setenv}
deps =
  -r{toxinidir}/requirements.txt
  docutils==0.16
  pygments==2.6.1
  sphinx==1.5.5
  sphinx_rtd_theme==0.5.0
  sphinx-js==1.5.2
basepython = python3.10
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    python {toxinidir}/docs/make_jsdoc.py {toxinidir}

[testenv:screenshots]
# generate screenshots for documentation
deps =
  -r{toxinidir}/requirements.txt
  pytest-flask==1.0.0
  Pillow==4.1.1
passenv = {[testenv]passenv}
setenv = {[testenv]setenv}
basepython = python3.10
sitepackages = False
whitelist_externals = env test
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    python {toxinidir}/docs/make_screenshots.py {toxinidir}

[testenv:docker]
# generate screenshots for documentation
deps =
  -r{toxinidir}/requirements.txt
  docker==2.2.1
passenv = {[testenv]passenv} DOCKER_TEST_TAG DOCKER_BUILD_VER
setenv = {[testenv]setenv}
basepython = python3.10
sitepackages = False
whitelist_externals = env test
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    python {toxinidir}/biweeklybudget/tests/docker_build.py {toxinidir} {distdir}

[testenv:acceptance310]
deps =
  -r{toxinidir}/requirements.txt
  cov-core
  coverage
  execnet
  py
  pytest>=2.8.3
  pytest-cache
  pytest-cov
  mock
  freezegun
  pytest-flask==1.0.0
  pytest-selenium
  pytest-timeout
  alembic-verify
  retrying
passenv = {[testenv]passenv}
setenv = {[testenv]setenv}
basepython = python3.10
sitepackages = False
whitelist_externals = env test
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    py.test -rxs -vv --durations=50 --durations-file=results/test_durations.json --driver Chrome --html=results/acceptance.html -m "acceptance" biweeklybudget

[testenv:migrations]
deps =
  -r{toxinidir}/requirements.txt
  execnet
  py
  pytest>=2.8.3
  pytest-cache
  mock
  freezegun
  alembic-verify
  pytest-html
  retrying
passenv=CI TRAVIS* CONTINUOUS_INTEGRATION NO_REFRESH_DB NO_CLASS_REFRESH_DB MYSQL_*
setenv = {[testenv]setenv}
basepython = python3.10
sitepackages = False
whitelist_externals = env test
commands =
    python --version
    virtualenv --version
    pip --version
    pip freeze
    py.test -rxs -vv --durations=50 --durations-file=results/test_durations.json --html=results/migrations.html -m "migrations" biweeklybudget
