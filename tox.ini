[tox]
envlist = py310,docs,jsdoc,screenshots,acceptance,docker,migrations,plaid

[testenv]
deps =
  -r{toxinidir}/requirements.txt
  cov-core
  coverage
  execnet
  py
  pycodestyle
  pytest
  pytest-cache
  pytest-cov
  pytest-pycodestyle
  pytest-flakes
  pytest-html
  ansi2html
  mock
  freezegun
  pytest-blockage
  pytest-timeout
  alembic-verify
  retrying
  pytest-flask==1.0.0

passenv=CI,CONTINUOUS_INTEGRATION,AWS*,NO_REFRESH_DB,DB_CONNSTRING,NO_CLASS_REFRESH_DB
setenv =
    TOXINIDIR={toxinidir}
    SETTINGS_MODULE=biweeklybudget.tests.fixtures.test_settings
    CI=true
    BIWEEKLYBUDGET_TEST_TIMESTAMP=1501223084
sitepackages = False
allowlist_externals = env test

commands =
    python --version
    pip --version
    pip freeze
    py.test -rxs -vv --durations=10 --pycodestyle --flakes --blockage -m "not integration and not acceptance and not migrations and not plaid" --cov-report term-missing --cov-report xml --cov-report html --cov-config {toxinidir}/.coveragerc --cov=biweeklybudget --html=results/report.html {posargs:biweeklybudget}

[testenv:docs]
passenv=CI,CONTINUOUS_INTEGRATION
setenv =
    TOXINIDIR={toxinidir}
    CI=true
    BIWEEKLYBUDGET_TEST_TIMESTAMP=1501223084
    PLAID_CLIENT_ID=toxPlaidClientId
    PLAID_SECRET=toxPlaidSecret
    PLAID_PUBLIC_KEY=toxPlaidPublicKey
    PLAID_ENV=sandbox
    PLAID_COUNTRY_CODES=US
deps =
  -r{toxinidir}/requirements.txt
  docutils==0.16
  pygments==2.6.1
  sphinx==1.5.5
  sphinx_rtd_theme==0.5.0
basepython = python3.10
commands =
    python --version
    pip --version
    pip freeze
    rst2html.py --halt=2 README.rst /dev/null
    sphinx-apidoc biweeklybudget biweeklybudget/tests biweeklybudget/alembic biweeklybudget/vendored -o {toxinidir}/docs/source -e -f -M
    # link check
    # -n runs in nit-picky mode
    # -W turns warnings into errors
    sphinx-build -a -n -W -b linkcheck {toxinidir}/docs/source {toxinidir}/docs/build/html
    # build
    sphinx-build -a -n -W -b html {toxinidir}/docs/source {toxinidir}/docs/build/html

[testenv:jsdoc]
# generate sphinx-js javascript documentation
passenv = {[testenv:docs]passenv}
setenv = {[testenv:docs]setenv}
deps =
  -r{toxinidir}/requirements.txt
  docutils==0.16
  pygments==2.6.1
  sphinx==1.5.5
  sphinx_rtd_theme==0.5.0
  sphinx-js==1.5.2
basepython = python3.10
commands =
    python --version
    pip --version
    pip freeze
    python {toxinidir}/docs/make_jsdoc.py {toxinidir}

[testenv:screenshots]
# generate screenshots for documentation
deps =
  -r{toxinidir}/requirements.txt
  pytest-flask==1.0.0
  Pillow==9.3.0
passenv = {[testenv]passenv}
setenv = {[testenv]setenv}
basepython = python3.10
sitepackages = False
allowlist_externals = env test
commands =
    python --version
    pip --version
    pip freeze
    python {toxinidir}/docs/make_screenshots.py {toxinidir}

[testenv:docker]
deps =
  -r{toxinidir}/requirements.txt
  docker==2.2.1
passenv = {[testenv]passenv},DOCKER_TEST_TAG,DOCKER_BUILD_VER
setenv = {[testenv]setenv}
basepython = python3.10
sitepackages = False
allowlist_externals = env,test
package = sdist
commands =
    python --version
    pip --version
    pip freeze
    python {toxinidir}/biweeklybudget/tests/docker_build.py {toxinidir}

[testenv:acceptance]
deps =
  -r{toxinidir}/requirements.txt
  cov-core
  coverage
  execnet
  py
  pytest
  pytest-cache
  pytest-cov
  mock
  freezegun
  pytest-flask==1.0.0
  pytest-selenium
  pytest-timeout
  alembic-verify
  retrying
passenv = {[testenv]passenv}
setenv = {[testenv]setenv}
basepython = python3.10
sitepackages = False
allowlist_externals = env test
commands =
    python --version
    pip --version
    pip freeze
    py.test -rxs -vv --durations=50 --durations-file=results/test_durations.json --driver Chrome --html=results/acceptance.html --cov-report xml --cov-report html --cov-config {toxinidir}/.coveragerc-acceptance --cov=biweeklybudget -m "acceptance" {posargs:biweeklybudget}

[testenv:plaid]
deps =
  -r{toxinidir}/requirements.txt
  cov-core
  coverage
  execnet
  py
  pytest
  pytest-cache
  pytest-cov
  mock
  freezegun
  pytest-flask==1.0.0
  pytest-selenium
  pytest-timeout
  alembic-verify
  retrying
passenv=CI,CONTINUOUS_INTEGRATION,AWS*,NO_REFRESH_DB,DB_CONNSTRING,NO_CLASS_REFRESH_DB,PLAID_*
setenv =
    TOXINIDIR={toxinidir}
    SETTINGS_MODULE=biweeklybudget.tests.fixtures.test_settings
basepython = python3.10
sitepackages = False
allowlist_externals = env test
commands =
    python --version
    pip --version
    pip freeze
    py.test -rxs -vv --durations=50 --durations-file=results/test_durations.json --driver Chrome --html=results/plaid.html -m "plaid" {posargs:biweeklybudget}

[testenv:migrations]
deps =
  -r{toxinidir}/requirements.txt
  execnet
  py
  pytest
  pytest-cache
  mock
  freezegun
  alembic-verify
  pytest-html
  retrying
passenv=CI,CONTINUOUS_INTEGRATION,NO_REFRESH_DB,NO_CLASS_REFRESH_DB,MYSQL_*,SQL_ECHO
setenv = {[testenv]setenv}
basepython = python3.10
sitepackages = False
allowlist_externals = env test
commands =
    python --version
    pip --version
    pip freeze
    py.test -rxs -vv --durations=50 --durations-file=results/test_durations.json --html=results/migrations.html -m "migrations" biweeklybudget/tests/migrations
